import groovy.sql.Sql

configurations {
    sqllite
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'gs-actuator-service'
    version =  '0.1.0'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	maven {
	     url "http://download.osgeo.org/webdav/geotools/"
	}
    mavenCentral()
}

dependencies {
	// Added
	sqllite "org.xerial:sqlite-jdbc:3.8.9.1"
	compile("javax.media:jai_core:1.1.3")
	compile("org.geotools:gt-shapefile:11.5")
	//
	compile("com.google.maps:google-maps-services:0.1.12")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}
//Added
URLClassLoader loader = GroovyObject.class.classLoader
configurations.sqllite.each { File file ->
    loader.addURL(file.toURL())
}
Sql sql = Sql.newInstance('jdbc:sqlite:shops.db', "org.sqlite.JDBC")

task checkSql << {
    sql.execute 'CREATE TABLE TIM(name CHAR(50))'
    sql.eachRow('SELECT * FROM sqlite_master') { row ->
        logger.lifecycle row.toString()
    }
}
//
task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}